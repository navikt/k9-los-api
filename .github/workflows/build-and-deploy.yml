# This workflow trigger on push to any branch.
name: CI / CD
on:
  push:
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENCE'
      - 'CODEOWNERS'
    branches:

env:
  BASE_IMAGE: docker.pkg.github.com/${{ github.repository }}/k9-los-api

jobs:
  test:
    name: Check Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Test Code
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew clean test

  build-code-and-push-docker:
    name: Build code and push docker image
    if: startsWith(github.ref, 'refs/heads/dev-') || startsWith(github.ref, 'refs/heads/master') || github.event.deployment.payload.triggered # Build and push docker if branch is either master or dev-*
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build JAR
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew clean shadowjar # Creates a combined JAR of project and runTime dependencies.
      - name: Build Docker image
        run: |
          docker build -t $BASE_IMAGE:latest .
          docker build -t $BASE_IMAGE:$(date "+%Y.%m.%d")-$(git rev-parse --short HEAD) .
      - name: Login to Github Package Registry
        env:
          DOCKER_USERNAME: x-access-token
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin docker.pkg.github.com
      - name: Push Docker image
        run: |
          docker push $BASE_IMAGE:latest
          docker push $BASE_IMAGE:$(date "+%Y.%m.%d")-$(git rev-parse --short HEAD)

  deploy-dev-fss:
    name: Deploy to dev-fss
    if: startsWith(github.ref, 'refs/heads/dev-') || startsWith(github.ref, 'refs/heads/master') # Deploy if branch is either master or dev-*
    needs: build-code-and-push-docker # Depends on build-code-and-push-docker job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: unpack
        run: |
          echo "::set-env name=IMAGE::$BASE_IMAGE:$(date "+%Y.%m.%d")-$(git rev-parse --short HEAD)"
      - name: Deploy
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.DEPLOY_KEY }}
          CLUSTER: dev-fss
          RESOURCE: nais/dev-fss.yml

  deploy-prod-fss:
    name: Deploy to prod-fss
    if: startsWith(github.ref, 'refs/heads/master')   # If the branch is master
    needs: build-code-and-push-docker # Depends on build-code-and-push-docker job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: unpack
        run: |
          echo "::set-env name=IMAGE::$BASE_IMAGE:$(date "+%Y.%m.%d")-$(git rev-parse --short HEAD)"
      - name: Deploy
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: nais/prod-fss.yml
