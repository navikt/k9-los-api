name: Build master
on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '**.MD'
      - '.gitignore'
      - 'LICENSE'
      - 'CODEOWNERS'
  workflow_dispatch:

jobs:
  codeql:
    uses: navikt/sif-gha-workflows/.github/workflows/gradle-codeql.yml@main
    permissions:
      actions: read
      contents: read
      pull-requests: read
      security-events: write
    secrets: inherit
    with:
      javaversion: 21
      package-command: './gradlew clean build -x test'
      branch: master

  test:
    uses: navikt/sif-gha-workflows/.github/workflows/gradle-test.yml@main
    permissions:
      contents: read
    secrets: inherit
    with:
      javaversion: 21

  build:
    uses: navikt/sif-gha-workflows/.github/workflows/gradle-build.yml@main
    permissions:
      contents: write
      id-token: write
    secrets: inherit
    with:
      team: k9saksbehandling
      javaversion: 21

  trivy:
    needs: [ build ]
    uses: navikt/sif-gha-workflows/.github/workflows/trivy.yml@main
    permissions:
      contents: write
      security-events: write
      id-token: write
      actions: read
    secrets: inherit
    with:
      image: ${{ needs.build.outputs.image }}
      team: k9saksbehandling

  deploy-dev:
    runs-on: ubuntu-latest
    needs: [ build, test ]
    environment: "dev-fss:k9saksbehandling"
    concurrency: "dev-fss:k9saksbehandling"
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # ratchet:actions/checkout@v3
      - name: Deploy til dev-fss
        uses: nais/deploy/actions/deploy@c73efa8384743a5c14b94d4a4b9c1cf5a260b532 # ratchet:nais/deploy/actions/deploy@v2
        env:
          IMAGE: ${{ needs.build.outputs.image }}
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: nais/naiserator.yaml
          VARS: nais/dev-fss.json

  deploy-prod:
    runs-on: ubuntu-latest
    needs: [ build, test, deploy-dev ]
    environment: "prod-fss:k9saksbehandling"
    concurrency: "prod-fss:k9saksbehandling"
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # ratchet:actions/checkout@v3
      - name: Deploy til prod-fss
        uses: nais/deploy/actions/deploy@c73efa8384743a5c14b94d4a4b9c1cf5a260b532 # ratchet:nais/deploy/actions/deploy@v2
        env:
          IMAGE: ${{ needs.build.outputs.image }}
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: nais/naiserator.yaml
          VARS: nais/prod-fss.json

  close-old-deployment-reviews:
    runs-on: ubuntu-latest
    needs: [ build, test, deploy-dev ]
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # ratchet:actions/checkout@v3

      - name: Close all older deployment reviews
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PENDING_REVIEWS=$(gh api \
            repos/${{ github.repository }}/environments/prod-fss:k9saksbehandling/deployment_protection_rules/pending_deployments \
            --jq '.pending_deployments[] | {run_id: .deployment.workflow_run_id, deploy_id: .deployment.id}')

          # Lukk ALLE andre deployment reviews unntatt for denne run
          echo "$PENDING_REVIEWS" | jq -c '.' | while read -r review; do
            RUN_ID=$(echo "$review" | jq -r '.run_id')
            DEPLOY_ID=$(echo "$review" | jq -r '.deploy_id')

            # Sjekk om review er fra en annen workflow run
            if [[ "$RUN_ID" != "${{ github.run_id }}" ]]; then
              echo "Lukker deployment review for Run ID: $RUN_ID"
              gh api \
                --method POST \
                repos/${{ github.repository }}/actions/deployments/$DEPLOY_ID/reject \
                -f environment_name="prod-fss:k9saksbehandling" \
                -f state="rejected" \
                -f comment="Automatisk avvist - nyere deployment er tilgjengelig"
            fi
          done