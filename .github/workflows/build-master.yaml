name: Build master
on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '**.MD'
      - '.gitignore'
      - 'LICENSE'
      - 'CODEOWNERS'
  workflow_dispatch:

jobs:
  codeql:
    uses: navikt/sif-gha-workflows/.github/workflows/gradle-codeql.yml@main
    permissions:
      actions: read
      contents: read
      pull-requests: read
      security-events: write
    secrets: inherit
    with:
      readertoken: true
      javaversion: 21
      package-command: './gradlew clean build -x test'
      branch: master

  test:
    uses: navikt/sif-gha-workflows/.github/workflows/gradle-test.yml@main
    permissions:
      contents: read
    secrets: inherit
    with:
      readertoken: true
      javaversion: 21

  build:
    uses: navikt/sif-gha-workflows/.github/workflows/gradle-build.yml@main
    permissions:
      contents: write
      id-token: write
    secrets: inherit
    with:
      readertoken: true
      team: k9saksbehandling
      javaversion: 21

  trivy:
    needs: [ build ]
    uses: navikt/sif-gha-workflows/.github/workflows/trivy.yml@main
    permissions:
      contents: write
      security-events: write
      id-token: write
      actions: read
    secrets: inherit
    with:
      image: ${{ needs.build.outputs.image }}
      team: k9saksbehandling

  deploy-dev:
    runs-on: ubuntu-latest
    needs: [ build, test ]
    environment: "dev-fss:k9saksbehandling"
    permissions:
      contents: read
      id-token: write
      actions: read
    outputs:
      image: ${{ needs.build.outputs.image }}
    steps:
      - uses: actions/checkout@v3
      - name: Deploy til dev-fss
        uses: nais/deploy/actions/deploy@v2
        env:
          WORKLOAD_IMAGE: ${{ needs.build.outputs.image }}
          CLUSTER: dev-fss
          RESOURCE: nais/naiserator.yaml
          VARS: nais/dev-fss.json

  deploy-prod:
    runs-on: ubuntu-latest
    needs: [ build, test ]
    environment: "prod-fss:k9saksbehandling"
    permissions:
      contents: read
      id-token: write
      actions: read
    steps:
      - uses: actions/checkout@v3
      - name: Deploy til prod-fss
        uses: nais/deploy/actions/deploy@v2
        env:
          WORKLOAD_IMAGE: ${{ needs.build.outputs.image }}
          CLUSTER: prod-fss
          RESOURCE: nais/naiserator.yaml
          VARS: nais/prod-fss.json
