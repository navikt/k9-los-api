ktor {
  deployment {
    port = 8020
    port = ${?PORT}

    connectionGroupSize = 16
    callGroupSize = 16
    workerGroupSize = 16

    requestQueueLimit=20

    runningLimit=20
    shareWorkGroup=false
  }
  application {
    id = "k9-los-api"
    modules = [no.nav.k9.los.K9LosKt.k9Los]
  }
}
nav {
  clustername = "",
  clustername = ${?NAIS_CLUSTER_NAME},
  gosys{
      baseuri = "",
      baseuri = ${?OPPGAVE_BASE_URI},
  }
  trust_store {
    path: ""
    path: ${?NAV_TRUSTSTORE_PATH}
    password: ""
    password: ${?NAV_TRUSTSTORE_PASSWORD}
  }
  register_urls {
    pdl_url: ${?PDL_URL}
    k9_url: ${?APP_K9SAK_URL}
  }
  sak_og_behandling {
    gateway: ""
    gateway: ${?MQGATEWAY02_NAME}
    host: ""
    host: ${?MQGATEWAY02_HOSTNAME}
    port: ""
    port: ${?MQGATEWAY02_PORT}
  }
  db {
    username = ""
    username = ${?DB_USERNAME}
    password = ""
    password = ${?DB_PASSWORD}
    url = ""
    url = ${?DB_URL}
    vault_mountpath = ""
    vault_mountpath = ${?DB_VAULT_MOUNTPATH}
  }
  kafka {
    bootstrap_servers = "",
    bootstrap_servers = ${?BOOTSTRAP_SERVERS}
    username = ""
    username = ${?SYSTEMBRUKER_USERNAME}
    password = ""
    password = ${?SYSTEMBRUKER_PASSWORD}
    aksjonshendelseTopic = ""
    aksjonshendelseTopic = ${?KAFKA_AKSJONSPUNKTHENDELSE_TOPIC}
    klageTilLosTopic = ""
    klageTilLosTopic = ${?KAFKA_KLAGE_TIL_LOS_TOPIC}
    punsjAksjonshendelseTopic = ${?KAFKA_PUNSJAKSJONSPUNKTHENDELSE_TOPIC}
    tilbakekrevingaksjonshendelseTopic = ""
    tilbakekrevingaksjonshendelseTopic = ${?KAFKA_AKSJONSPUNKTHENDELSE_TILBAKE_TOPIC}
    sakOgBehandlingTopic = ""
    sakOgBehandlingTopic = ${?KAFKA_SAKOGBEHANDLING_TOPIC}
    statistikkSakTopic = ""
    statistikkSakTopic = ${?KAFKA_STATISTIKK_SAK_TOPIC}
    책penStatistikkSakTopic = ""
    책penStatistikkSakTopic = ${?KAFKA_AAPEN_STATISTIKK_SAK_TOPIC}
    statistikkBehandlingTopic = ""
    statistikkBehandlingTopic = ${?KAFKA_STATISTIKK_BEHANDLING_TOPIC}
    책penStatistikkBehandlingTopic = ""
    책penStatistikkBehandlingTopic = ${?KAFKA_AAPEN_STATISTIKK_BEHANDLING_TOPIC}
    unready_after_stream_stopped_in {
      amount = "1000"
      unit = "SECONDS"
    }
  }

  kafka_aiven {
    bootstrap_servers = "",
    bootstrap_servers = ${?KAFKA_BROKERS}
    trust_store_path = ""
    trust_store_path = ${?KAFKA_TRUSTSTORE_PATH}
    key_store_path = ""
    key_store_path = ${?KAFKA_KEYSTORE_PATH}
    credstore_password = ""
    credstore_password = ${?KAFKA_CREDSTORE_PASSWORD}
    application_id = ""
    application_id = ${?KAFKA_STREAMS_APPLICATION_ID}
    k9sakTopic = ""
    k9sakTopic = ${?KAFKA_K9SAK_TOPIC}
    k9punsjTopic = ""
    k9punsjTopic = ${?KAFKA_K9PUNSJ_TOPIC}
  }

  auth {
   azure_client_id = ""
   azure_client_id = ${?AZURE_APP_CLIENT_ID}
   azure_client_secret = ""
   azure_client_secret = ${?AZURE_APP_CLIENT_SECRET}
   issuers = [{
       alias = "nais-sts"
       type = "sts"
       audience = ""
       audience = ${?STS_AUDIENCE}
       discovery_endpoint = ""
       discovery_endpoint = ${?NAIS_STS_DISCOVERY_ENDPOINT}
    },
    {
       alias = "azure-v2"
       type = "azure"
       audience = ""
       audience = ${?AZURE_APP_CLIENT_ID}
       discovery_endpoint = ""
       discovery_endpoint = ${?AZURE_APP_WELL_KNOWN_URL}
       azure {
         require_certificate_client_authentication = "false"
         authorized_clients = ""
         authorized_clients = ${?AZURE_AUTHORIZED_CLIENTS}
       }
     }
    ]
    clients = [{
      alias = "azure-v2"
      client_id = ""
      client_id = ${?AZURE_APP_CLIENT_ID}
      private_key_jwk = ""
      private_key_jwk = ${?AZURE_APP_JWK}
      discovery_endpoint = ""
      discovery_endpoint = ${?AZURE_APP_WELL_KNOWN_URL}
    }
    ]
    scopes = {
    }
  }
  abac {
    system_user = ""
    system_user = ${?SYSTEMBRUKER_USERNAME}
    system_user_password = ""
    system_user_password = ${?SYSTEMBRUKER_PASSWORD}
    url = ""
    url = ${?ABAC_PDP_ENDPOINT_URL}
  }
  audit {
    enabled : ""
    enabled : ${?AUDITLOGGER_ENABLED}
    vendor : ""
    vendor : ${?AUDITLOGGER_VENDOR}
    product : ""
    product : ${?AUDITLOGGER_PRODUCT}
  }
  features {
    nyOppgavestyring = ""
    nyOppgavestyring = ${?NY_OPPGAVESTYRING}
    nyOppgavestyringDvhSending = ""
    nyOppgavestyringDvhSending = ${?NY_OPPGAVESTYRING_DVH_SENDING}
    nyOppgavestyringRestApi = ""
    nyOppgavestyringRestApi = ${?NY_OPPGAVESTYRING_REST_API}
    punsjConsumerAiven = ""
    punsjConsumerAiven = ${?PUNSJ_CONSUMER_AIVEN}
    tilbakeConsumerAiven = ""
    tilbakeConsumerAiven = ${?TILBAKE_CONSUMER_AIVEN}
    k9SakConsumerAiven = ""
    k9SakConsumerAiven = ${?K9SAK_CONSUMER_AIVEN}
  }
}
