ktor {
  deployment {
    port = 8020
    port = ${?PORT}
  }
  application {
    id = "k9-los-api"
    modules = [no.nav.k9.K9LosKt.k9Los]
  }
}
nav {
    gosys{
        baseuri = "",
        baseuri = ${?OPPGAVE_BASE_URI},
    }
  trust_store {
    path: ""
    path: ${?NAV_TRUSTSTORE_PATH}
    password: ""
    password: ${?NAV_TRUSTSTORE_PASSWORD}
  }
  register_urls {
    tps_proxy_v1: ${?TPS_PROXY_V1_URL}
    pdl_url: ${?PDL_URL}
  }
  sak_og_behandling {
    gateway: ${?MQGATEWAY02_NAME}
    host: ${?MQGATEWAY02_HOSTNAME}
    port: ${?MQGATEWAY02_PORT}
  }
  db {
    username = ""
    username = ${?DB_USERNAME}
    password = ""
    password = ${?DB_PASSWORD}
    url = ""
    url = ${?DB_URL}
    vault_mountpath = ""
    vault_mountpath = ${?DB_VAULT_MOUNTPATH}
  }
  kafka {
    bootstrap_servers = "",
    bootstrap_servers = ${?BOOTSTRAP_SERVERS}
    username = ""
    username = ${?SYSTEMBRUKER_USERNAME}
    password = ""
    password = ${?SYSTEMBRUKER_PASSWORD}
    aksjonshendelseTopic = ${?KAFKA_AKSJONSPUNKTHENDELSE_TOPIC}
    unready_after_stream_stopped_in {
      amount = "1000"
      unit = "SECONDS"
    }
  }
  auth {
   cookie_name = ""
   cookie_name = ${?COOKIE_NAME}
    issuers = [{
      alias = "azure-v1"
      type = "azure"
      audience = ""
      audience = ${?AZURE_CLIENT_ID}
      discovery_endpoint = ""
      discovery_endpoint = ${?AZURE_V1_DISCOVERY_ENDPOINT}
      azure {
        require_certificate_client_authentication = "true"
        authorized_clients = ""
        authorized_clients = ${?AZURE_AUTHORIZED_CLIENTS}
      }
      cookie_name = ""
      cookie_name = ${?COOKIE_NAME}
    }, {
       alias = "azure-v2"
       type = "azure"
       audience = ""
       audience = ${?AZURE_CLIENT_ID}
       discovery_endpoint = ""
       discovery_endpoint = ${?AZURE_V2_DISCOVERY_ENDPOINT}
       azure {
         require_certificate_client_authentication = "true"
         authorized_clients = ""
         authorized_clients = ${?AZURE_AUTHORIZED_CLIENTS}
       }
     }
    ]
    clients = [{
      alias = "nais-sts"
      client_id = "srvk9-los-api"
      client_id = ${?SYSTEMBRUKER_USERNAME}
      client_secret = ""
      client_secret = ${?SYSTEMBRUKER_PASSWORD}
      discovery_endpoint = ""
      discovery_endpoint = ${?NAIS_STS_DISCOVERY_ENDPOINT}
    },
    {
      alias = "azure-v2"
      client_id = ""
      client_id = ${?AZURE_client_id}
      private_key_jwk = ""
      private_key_jwk = ${?AZURE_jwk}
      discovery_endpoint = ""
      discovery_endpoint = ${?AZURE_V2_DISCOVERY_ENDPOINT}
    }
    ]
    scopes = {
    }
  }
  abac {
    system_user = "${?SYSTEMBRUKER_USERNAME}"
    system_user_password = "${?SYSTEMBRUKER_PASSWORD}"
    pdp_url = "${?ABAC_PDP_ENDPOINT_URL}"
  }
}
